module CompletionsService

imports
  SemanticServices

exports

  sorts
    CompletionPart CompletionAnno

  syntax

    "completions" <SectionName-LEX> <LAYOUT?-CF> <CompletionRule*-CF> -> <Section-CF> {cons("Completions")}

    "completions" -> <ReservedName-CF>

  context-free syntax

    %%"identifier" "lexical" ":" PropertyValue -> CompletionRule {cons("IdentifierLexical")}


    "completion" "trigger" ":" PropertyValue OptCompletionAnno -> CompletionRule {cons("CompletionTrigger")}

    "completion" "proposer" SemanticNode* ":" StrategoCall -> CompletionRule {cons("CompletionProposer")}

    "completion" "keyword" ":" PropertyValue OptCompletionAnno -> CompletionRule {cons("CompletionKeyword")}

    "completion" "template" Sort* ":" CompletionPrefix CompletionPart+ CompletionAnno* -> CompletionRule {cons("CompletionTemplateEx")}

               -> CompletionPrefix {cons("NoCompletionPrefix")}
    String "=" -> CompletionPrefix {cons("CompletionPrefix")}

  context-free syntax

    "completions" -> StrategoCall {reject}
    "completion"  -> StrategoCall {reject}
    "identifier"  -> StrategoCall {reject}
    "observer"    -> StrategoCall {reject}
    "builder"     -> StrategoCall {reject}
    "occurrence"  -> StrategoCall {reject}
    ReservedName  -> StrategoCall {reject}

    String      -> CompletionPart
    Placeholder -> CompletionPart {cons("Placeholder")}
    "(cursor)"  -> CompletionPart {cons("Cursor")}
    PlaceholderWithSortPrefix Id ">" -> CompletionPart {cons("PlaceholderWithSort")}

                   -> OptCompletionAnno {cons("None")}
    CompletionAnno -> OptCompletionAnno

    "(disabled)" -> CompletionAnno {cons("Disable")}
    "(blank)"    -> CompletionAnno {cons("Blank")}
    "(linked)"   -> CompletionAnno {cons("Linked")}
    "(blank)"    -> PropertyValue {reject}
    "(disable)"  -> PropertyValue {reject}
    "(linked)"   -> PropertyValue {reject}
    "completion" -> PropertyValue {reject}
    "template"   -> PropertyValue {reject}
    "trigger"    -> PropertyValue {reject}
    "identifier" -> PropertyValue {reject}

  lexical syntax

    "<" PlaceholderChar* ":" -> PlaceholderWithSortPrefix
    "<" PlaceholderChar* ">" -> Placeholder
    ~[\:\>\n]                -> PlaceholderChar

lexical restrictions
  "completions" "completion" "template" -/- [A-Za-z0-9\_]
