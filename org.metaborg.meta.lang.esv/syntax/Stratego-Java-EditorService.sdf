module Stratego-Java-EditorService
imports
  Stratego-Java-EBlock
  EditorService
  
%%Comments[Section]
  Comments[BuilderRule]
  Comments[CompletionRule]
  Comments[RefactoringRule]
  Comments[ReferenceRule]
  Comments[ColorRule]
  Comments[OutlineRule]
  Comments[FoldingRule]
  Comments[LanguageProperty]

exports
  context-free start-symbols Module[[StrategoHost]]

  sorts
    QuotedTerm
    QuotedTerms

  context-free syntax
    
    %% (Anti-)quotations
    "descriptor" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    
                 "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    
    "descriptor" "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}

    "descriptor" "|[" BuilderRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" CompletionRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" RefactoringRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" ReferenceRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    
                 "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                 "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                 "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}

                 "|[" BuilderRule     "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                 "|[" CompletionRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                 "|[" RefactoringRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                 "|[" ReferenceRule   "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}

    QuotedTerm -> Id {cons("FromMetaExpr"), avoid}
    QuotedTerm -> PropertyValue {cons("FromMetaExpr"), avoid}
    QuotedTerm -> StrategoCall {cons("FromMetaExpr"), avoid}
    QuotedTerm -> URL {cons("FromMetaExpr"), avoid}
    QuotedTerm -> ModuleName {cons("FromMetaExpr")}
    QuotedTerm -> Color {cons("FromMetaExpr")}
    QuotedTerm -> Font  {cons("FromMetaExpr")}
    QuotedTerm -> SectionName {cons("FromMetaExpr")}

    QuotedTerm -> BuilderRule {cons("FromMetaExpr"), avoid}
    QuotedTerm -> CompletionRule {cons("FromMetaExpr"), avoid}
    QuotedTerm -> RefactoringRule {cons("FromMetaExpr"), avoid}
    QuotedTerm -> ReferenceRule {cons("FromMetaExpr"), avoid}
    
    QuotedTerms -> OutlineRule*   {cons("FromMetaExpr")}
    QuotedTerms -> ColorRule*     {cons("FromMetaExpr")}
    QuotedTerms -> FoldingRule*   {cons("FromMetaExpr")}
    QuotedTerms -> PropertyValues {cons("FromMetaExpr")}

    QuotedTerms -> BuilderRule*  {cons("FromMetaExpr")}
    QuotedTerms -> CompletionRule*  {cons("FromMetaExpr")}
    QuotedTerms -> RefactoringRule*  {cons("FromMetaExpr")}
    QuotedTerms -> ReferenceRule*  {cons("FromMetaExpr")}

    "~"  Term[[StrategoHost]] -> QuotedTerm  {bracket}
    "~*" Term[[StrategoHost]] -> QuotedTerms {bracket}

    "~sort:" Term[[StrategoHost]] -> Sort {cons("FromMetaExpr"), prefer}
    
    %% Stratego applications as anti-quotation
    "<" Strategy[[StrategoHost]] ">" Term[[StrategoHost]] -> QuotedTerm {cons("App")}
    StrategyAngle[[StrategoHost]]                         -> QuotedTerm {cons("RootApp"), avoid}

  lexical syntax
  
    "<" ~[]* ">" -> PropertyValue {reject}
    "~" ~[]*     -> PropertyValue {reject}
