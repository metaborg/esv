module LanguageDescription

imports
	Common SemanticServices

exports
  
  sorts
  
    LanguageProperty PropertyValue NoContinuation PropertyValues URL
    FenceDef BlockCommentDef IndentDef
  
  syntax
  
    "language" <SectionName-LEX> <LAYOUT?-CF> <LanguageProperty*-CF> -> <Section-CF> {cons("Language")}
    
    "language" -> <ReservedName-CF>
  
  lexical syntax
    
    ~[\ \t\n\r\,\:\"\=]+ -> PropertyValue {avoid}

    ~[\ \t\n\r\,\/\:]+ "://" ~[\ \t\n\r]+ -> URL
    
  lexical restrictions
  
  	PropertyValue -/- ~[\ \t\n\r\,\:\"\=]
  	URL           -/- ~[\ \t\n\r]
  
  context-free syntax
  
    { PropertyValue ","}* -> PropertyValues {cons("Values")}
    String                -> PropertyValue
  
  	%% General language properties
  
    "name"            ":" PropertyValue          -> LanguageProperty {cons("LanguageName")}
    "id"              ":" PropertyValue          -> LanguageProperty {cons("LanguageId")}
    "extensions"      ":" PropertyValues         -> LanguageProperty {cons("Extensions")}
    "description"     ":" PropertyValue          -> LanguageProperty {cons("Description")}
    "table"           ":" PropertyValue          -> LanguageProperty {cons("Table")}
    "table" "provider" ":" StrategoCall          -> LanguageProperty {cons("TableProvider")}
    "start" "symbols" ":" Sort*                  -> LanguageProperty {cons("StartSymbols")}
    "start" "symbols" ":" PropertyValues         -> LanguageProperty {cons("StartSymbols"), avoid}
    "url"             ":" URL                    -> LanguageProperty {cons("URL")}
    "extends"         ":" PropertyValues         -> LanguageProperty {cons("Extends")}
    "aliases"         ":" PropertyValues         -> LanguageProperty {cons("Aliases")} %% deprecated
    "unmanaged" "table" ":" Id "*"               -> LanguageProperty {cons("UnmanagedTablePrefix")}
    "disambiguator"   ":" StrategoCall           -> LanguageProperty {cons("Disambiguator")}
    "unicode" "flatten" ":" TrueOrFalse          -> LanguageProperty {cons("FlattenUnicode")}
    "observer" ":" StrategoCall ObserverOption*  -> LanguageProperty {cons("SemanticObserver")}    
    "provider" ":" PropertyValue                 -> LanguageProperty {cons("SemanticProvider")}
    
    "(" "multifile" ")"                          -> ObserverOption {cons("MultiFile")}
    
    %% Editor services not worth putting in a separate file
    
    "on" "save" ":" StrategoCall OnSaveAnno      -> LanguageProperty {cons("OnSave")}
   
     %% Syntax properties
     
     "line"  "comment" ":" PropertyValue      -> LanguageProperty {cons("LineCommentPrefix")}
     "block" "comment" ":" BlockCommentDef    -> LanguageProperty {cons("BlockCommentDefs")}
     "fences"          ":" FenceDef*          -> LanguageProperty {cons("FenceDefs")}
     "indent" "after"  ":" IndentDef*         -> LanguageProperty {cons("IndentDefs")}
     "identifier" "lexical" ":" PropertyValue -> LanguageProperty {cons("IdentifierLexical")}
     
     PropertyValue PropertyValue  PropertyValue -> BlockCommentDef {cons("BlockCommentDef")}
     PropertyValue NoContinuation PropertyValue -> BlockCommentDef {cons("BlockCommentDef")}
                                                -> NoContinuation {cons("NoContinuation")}
     
     PropertyValue PropertyValue -> FenceDef {cons("FenceDef")}
     PropertyValue               -> IndentDef {cons("IndentDef")}
     
     %% Avoid ambiguities with fencedef pairs
     "fences"     -> PropertyValue {reject}
     "identifier" -> PropertyValue {reject}
     "indent"     -> PropertyValue {reject}
     "fences"     -> PropertyValue {reject}
     "line"       -> PropertyValue {reject}
     "block"      -> PropertyValue {reject}
     "unmanaged"  -> Sort {reject}
     
     "true"  -> TrueOrFalse {cons("True")}
     "false" -> TrueOrFalse {cons("False")}
     
     %% JVM options
     "jvm" "opts" ":" JvmOpt* -> LanguageProperty {cons("JvmOpts")}
     XssOpt -> JvmOpt {cons("XssOpt")}
     XmxOpt -> JvmOpt {cons("XmxOpt")}
     ServerOpt -> JvmOpt {cons("ServerOpt")}
 
lexical syntax %% JVM options
  
     "-Xss" Int DataUnit -> XssOpt
     "-Xmx" Int DataUnit -> XmxOpt
     "-server"           -> ServerOpt
     [gGmMkK]            -> DataUnit
     
