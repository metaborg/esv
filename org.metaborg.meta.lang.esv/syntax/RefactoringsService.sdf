module RefactoringsService

imports
  SemanticServices
  BuildersService

exports
  
  syntax
  
    "refactorings" <SectionName-LEX> <LAYOUT?-CF> <RefactoringRule*-CF> -> <Section-CF> {cons("Refactorings")}

    "refactorings" -> <ReservedName-CF>

    "keybindings" <SectionName-LEX> <LAYOUT?-CF> <KeyBinding*-CF> -> <Section-CF> {cons("KeyBindings")}
    
    "keybindings" -> <ReservedName-CF>
  
  context-free syntax
  
    "pretty-print" ":" StrategoCall          -> RefactoringRule {cons("PrettyPrint")} %% no longer used, but still part of ESV to avoid breaking legacy projects
    "text" "reconstruction" ":" StrategoCall -> RefactoringRule {cons("TextReconstruction")}

    "refactoring" SemanticNode* ":" String "=" StrategoCall BuilderOption* UIOption*  -> RefactoringRule {cons("Refactoring")}
    
    "shortcut" ":" KeyCombination -> UIOption {cons("Shortcut")}
    "shortcut" ":" InteractionId  -> UIOption {cons("Shortcut")}
    
    String -> InteractionId {cons("InteractionId")}
          
    "input" InputField+ -> UIOption {cons("UserInput")}
    
    %% identifier input field [= text field + validation] 
    "identifier" ":" String                  -> InputField {ast("IdInputField(<1>, \"\")")}
    "identifier" ":" String "=" String       -> InputField {cons("IdInputField")}
    %%"identifier" ":" String "=" StrategoCall -> InputField {cons("IdInputField")}
    
    %% text input field 
    "text" ":" String                  -> InputField {ast("TextInputField(<1>, \"\")")}
    "text" ":" String "=" String       -> InputField {cons("TextInputField")}
    %%"text" ":" String "=" StrategoCall -> InputField {cons("TextInputField")}

    %% boolean input field 
    "boolean" ":" String                  -> InputField {ast("BooleanInputField(<1>, FalseValue()")}
    "boolean" ":" String "=" BooleanValue -> InputField {cons("BooleanInputField"), prefer}
    %%"boolean" ":" String "=" StrategoCall -> InputField {cons("BooleanInputField"), avoid}

    "true"  -> BooleanValue {cons("TrueValue")}
    "false" ->  BooleanValue {cons("FalseValue")}
     
    %% choice input field 
    %% list input field
  
     %% Avoid ambiguities with semantic nodes
    "pp-table"      -> SemanticNode {reject}
    "pretty-print"  -> SemanticNode {reject}
    "refactoring"   -> SemanticNode {reject}
    "refactorings" -> StrategoCall {reject}
    "refactoring"  -> StrategoCall {reject}
    "pretty-print"  -> StrategoCall {reject}
    "keybindings"  -> StrategoCall {reject}

context-free syntax

    %% Predefined Keybindings
    KeyCombination "=" String -> KeyBinding {cons("KeyBinding")} %% key binding (e.g., Shift + Alt + R = "org.eclipse.jdt.ui.edit.text.java.rename.element")
    {Key "+"}+                -> KeyCombination {cons("KeyCombination")}   %% key combination (e.g., 'Shift + Alt + R')

lexical syntax
     
    "Shift"  -> Key
    "Alt"    -> Key
    "Ctrl"   -> Key
    [A-Z]    -> Key
    
lexical restrictions
  "refactoring" "refactorings" "keybindings" "override" "input" "true" "false" -/- [A-Za-z0-9\_]


